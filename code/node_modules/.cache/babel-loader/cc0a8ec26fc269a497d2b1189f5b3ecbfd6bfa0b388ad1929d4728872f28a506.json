{"ast":null,"code":"var _jsxFileName = \"/home/njucs/code/src/FileUploader.js\";\n// src/FileUploader.js\nimport React from 'react';\nimport { Button } from 'antd';\nimport { FolderOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onFileUpload\n}) => {\n  const handleUploadProgram = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.directory = true;\n    input.webkitdirectory = true;\n    input.click();\n    input.onchange = async () => {\n      const folder = input.files;\n      if (!folder) return;\n      const folderStructure = await parseFolder(folder);\n      onFileUpload(folderStructure);\n    };\n  };\n  const parseFolder = async folder => {\n    const folderStructure = [];\n    for (let i = 0; i < folder.length; i++) {\n      const file = folder[i];\n      const pathSegments = file.webkitRelativePath.trim().split('/');\n      let currentLevel = folderStructure;\n      for (let index = 0; index < pathSegments.length; index++) {\n        let segment = pathSegments[index];\n        let existingNode = currentLevel.find(node => node.title === segment);\n        if (!existingNode) {\n          const newNode = {\n            title: segment,\n            key: segment + '_' + index,\n            type: segment.includes('.') ? 'file' : 'folder',\n            children: [],\n            content: null,\n            path: null,\n            isLeaf: index === pathSegments.length - 1\n          };\n          if (newNode.type === 'file') {\n            newNode.content = await readFile(file);\n            newNode.path = file.webkitRelativePath;\n            console.log(newNode.path);\n          }\n          currentLevel.push(newNode);\n          currentLevel = newNode.children;\n        } else {\n          currentLevel = existingNode.children;\n        }\n      }\n    }\n    return folderStructure;\n  };\n  const readFile = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = event => resolve(event.target.result);\n      reader.onerror = event => reject(event.target.error);\n      reader.readAsText(file);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    icon: /*#__PURE__*/_jsxDEV(FolderOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this),\n    style: {\n      margin: '8px'\n    },\n    onClick: handleUploadProgram,\n    children: \"\\u4E0A\\u4F20\\u672C\\u5730\\u9879\\u76EE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","Button","FolderOutlined","jsxDEV","_jsxDEV","FileUploader","onFileUpload","handleUploadProgram","input","document","createElement","type","directory","webkitdirectory","click","onchange","folder","files","folderStructure","parseFolder","i","length","file","pathSegments","webkitRelativePath","trim","split","currentLevel","index","segment","existingNode","find","node","title","newNode","key","includes","children","content","path","isLeaf","readFile","console","log","push","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsText","icon","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","onClick","_c","$RefreshReg$"],"sources":["/home/njucs/code/src/FileUploader.js"],"sourcesContent":["// src/FileUploader.js\nimport React from 'react';\nimport { Button } from 'antd';\nimport { FolderOutlined } from '@ant-design/icons';\n\nconst FileUploader = ({ onFileUpload}) => {\n\n  const handleUploadProgram = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.directory = true;\n    input.webkitdirectory = true;\n    input.click();\n\n    input.onchange = async () => {\n      const folder = input.files;\n      if (!folder) return;\n      const folderStructure = await parseFolder(folder);\n      onFileUpload(folderStructure);\n    };\n  };\n\n  const parseFolder = async (folder) => {\n    const folderStructure = [];\n    for (let i = 0; i < folder.length; i++) {\n      const file = folder[i];\n      const pathSegments = file.webkitRelativePath.trim().split('/');\n      let currentLevel = folderStructure;\n\n      for (let index = 0; index < pathSegments.length; index++) {\n        let segment = pathSegments[index];\n        let existingNode = currentLevel.find((node) => node.title === segment);\n\n        if (!existingNode) {\n          const newNode = {\n            title: segment,\n            key: segment + '_' + index,\n            type: segment.includes('.') ? 'file' : 'folder',\n            children: [],\n            content: null,\n            path: null,\n            isLeaf: index === pathSegments.length - 1,\n          };\n          if (newNode.type === 'file') {\n            newNode.content = await readFile(file);\n            newNode.path = file.webkitRelativePath;\n            console.log(newNode.path);\n          }\n          currentLevel.push(newNode);\n          currentLevel = newNode.children;\n        } else {\n          currentLevel = existingNode.children;\n        }\n      }\n    }\n    return folderStructure;\n  };\n\n  const readFile = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = (event) => reject(event.target.error);\n      reader.readAsText(file);\n    });\n  };\n\n  return (\n    <Button icon={<FolderOutlined />} style={{ margin: '8px' }} onClick={handleUploadProgram}>\n      上传本地项目\n    </Button>\n  );\n};\n\nexport default FileUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}