{"ast":null,"code":"// src/FileUploader.js\nimport React from'react';import{Button}from'antd';import{FolderOutlined}from'@ant-design/icons';import{jsx as _jsx}from\"react/jsx-runtime\";const FileUploader=_ref=>{let{onFileUpload}=_ref;const handleUploadProgram=()=>{const input=document.createElement('input');input.type='file';input.directory=true;input.webkitdirectory=true;input.click();input.onchange=async()=>{const folder=input.files;if(!folder)return;const folderStructure=await parseFolder(folder);onFileUpload(folderStructure);};};const parseFolder=async folder=>{const folderStructure=[];for(let i=0;i<folder.length;i++){const file=folder[i];const pathSegments=file.webkitRelativePath.trim().split('/');let currentLevel=folderStructure;for(let index=0;index<pathSegments.length;index++){let segment=pathSegments[index];let existingNode=currentLevel.find(node=>node.title===segment);if(!existingNode){const newNode={title:segment,key:segment+'_'+index,type:segment.includes('.')?'file':'folder',children:[],content:null,path:null,isLeaf:index===pathSegments.length-1};if(newNode.type==='file'){newNode.content=await readFile(file);newNode.path=file.webkitRelativePath;console.log(newNode.path);}currentLevel.push(newNode);currentLevel=newNode.children;}else{currentLevel=existingNode.children;}}}return folderStructure;};const readFile=file=>{return new Promise((resolve,reject)=>{const reader=new FileReader();reader.onload=event=>resolve(event.target.result);reader.onerror=event=>reject(event.target.error);reader.readAsText(file);});};return/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(FolderOutlined,{}),style:{margin:'8px'},onClick:handleUploadProgram,children:\"\\u4E0A\\u4F20\\u672C\\u5730\\u9879\\u76EE\"});};export default FileUploader;","map":{"version":3,"names":["React","Button","FolderOutlined","jsx","_jsx","FileUploader","_ref","onFileUpload","handleUploadProgram","input","document","createElement","type","directory","webkitdirectory","click","onchange","folder","files","folderStructure","parseFolder","i","length","file","pathSegments","webkitRelativePath","trim","split","currentLevel","index","segment","existingNode","find","node","title","newNode","key","includes","children","content","path","isLeaf","readFile","console","log","push","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsText","icon","style","margin","onClick"],"sources":["/home/njucs/bugDetection&Repair/code/src/FileUploader.js"],"sourcesContent":["// src/FileUploader.js\nimport React from 'react';\nimport { Button } from 'antd';\nimport { FolderOutlined } from '@ant-design/icons';\n\nconst FileUploader = ({ onFileUpload}) => {\n\n  const handleUploadProgram = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.directory = true;\n    input.webkitdirectory = true;\n    input.click();\n\n    input.onchange = async () => {\n      const folder = input.files;\n      if (!folder) return;\n      const folderStructure = await parseFolder(folder);\n      onFileUpload(folderStructure);\n    };\n  };\n\n  const parseFolder = async (folder) => {\n    const folderStructure = [];\n    for (let i = 0; i < folder.length; i++) {\n      const file = folder[i];\n      const pathSegments = file.webkitRelativePath.trim().split('/');\n      let currentLevel = folderStructure;\n\n      for (let index = 0; index < pathSegments.length; index++) {\n        let segment = pathSegments[index];\n        let existingNode = currentLevel.find((node) => node.title === segment);\n\n        if (!existingNode) {\n          const newNode = {\n            title: segment,\n            key: segment + '_' + index,\n            type: segment.includes('.') ? 'file' : 'folder',\n            children: [],\n            content: null,\n            path: null,\n            isLeaf: index === pathSegments.length - 1,\n          };\n          if (newNode.type === 'file') {\n            newNode.content = await readFile(file);\n            newNode.path = file.webkitRelativePath;\n            console.log(newNode.path);\n          }\n          currentLevel.push(newNode);\n          currentLevel = newNode.children;\n        } else {\n          currentLevel = existingNode.children;\n        }\n      }\n    }\n    return folderStructure;\n  };\n\n  const readFile = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = (event) => reject(event.target.error);\n      reader.readAsText(file);\n    });\n  };\n\n  return (\n    <Button icon={<FolderOutlined />} style={{ margin: '8px' }} onClick={handleUploadProgram}>\n      上传本地项目\n    </Button>\n  );\n};\n\nexport default FileUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}